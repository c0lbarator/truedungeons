from aiogram import Router, F, html
from aiogram.filters import Command, CommandStart, CommandObject
from filters.chat_type import ChatTypeFilter
from aiogram.types import Message, CallbackQuery, LinkPreviewOptions
from groq import AsyncGroq, DefaultAsyncHttpxClient
from dotenv import load_dotenv
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
import json
import os
from db import create_game
from httpx import AsyncClient
from sqlalchemy.ext.asyncio import AsyncSession
from openai import AsyncClient

import test_tg_bot.app.keyboards as kb
from db import get_game
from aiogram.filters import callback_data
from aiogram.types import (ReplyKeyboardMarkup, KeyboardButton,
                           InlineKeyboardButton, InlineKeyboardMarkup)
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder
from prompts import target_creation
load_dotenv()
router = Router()
class Reg_session(StatesGroup):
    #number_of_players = State()  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤
    genre = State()  # –∂–∞–Ω—Ä –∏–≥—Ä—ã
    purpose = State()  # —Ü–µ–ª—å
    complexity = State()  # —Å–ª–æ–∂–Ω–æ—Å—Ç—å (–ª–µ–≥–∫–∞—è, —Å—Ä–µ–¥–Ω—è—è, —Å–ª–æ–∂–Ω–∞—è)

@router.message(CommandStart(deep_link=False), ChatTypeFilter(chat_type=['private']))
async def cmd_start(message: Message):
    await message.answer(
        '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, –æ—Ç–≤–∞–∂–Ω—ã–π –∏—Å–∫–∞—Ç–µ–ª—å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π!\n–†–µ—à–∏–ª –ø–æ–∏–≥—Ä–∞—Ç—å –≤ DnD —Å –¥—Ä—É–∑—å—è–º–∏? üé≤\n\n–Ø ‚Äî —Ç–≤–æ–π –≤–µ—Ä–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –∏ –≤–µ–¥—É—â–∏–π –≤ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–º –º–∏—Ä–µ Dungeons & Dragons. –í–º–µ—Å—Ç–µ –º—ã –ø–æ–≥—Ä—É–∑–∏–º—Å—è –≤ –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è, –≥–¥–µ —Ç–≤–æ–∏ —Ä–µ—à–µ–Ω–∏—è –æ–ø—Ä–µ–¥–µ–ª—è—Ç —Å—É–¥—å–±—É –≥–µ—Ä–æ–µ–≤ –∏ –∏—Å—Ö–æ–¥ –≤–µ–ª–∏–∫–∏—Ö —Å—Ä–∞–∂–µ–Ω–∏–π. \n\n–ù–∞–∂–∏–º–∞–π –Ω–∞ –∫–Ω–æ–ø–∫–∏, –∑–∞–¥–∞–≤–∞–π –≤–æ–ø—Ä–æ—Å—ã –∏ –≥–æ—Ç–æ–≤—å—Å—è –∫ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–º –ø–æ–≤–æ—Ä–æ—Ç–∞–º —Å—é–∂–µ—Ç–∞. –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–æ–∑–¥–∞—Ç—å –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–π –º–∏—Ä, –≤ –∫–æ—Ç–æ—Ä–æ–º –æ–∂–∏–≤—É—Ç —Ç–≤–æ–∏ —Å–∞–º—ã–µ —Å–º–µ–ª—ã–µ —Ñ–∞–Ω—Ç–∞–∑–∏–∏. –ì–æ—Ç–æ–≤ –∫ –Ω–∞—á–∞–ª—É –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è?\n\n–í –ø—É—Ç—å, –≥–µ—Ä–æ–π! üó°Ô∏è‚ú®',
        reply_markup=kb.start)


@router.callback_query(F.data == 'start')
async def menu(callback: CallbackQuery):
    await callback.answer()
    await callback.message.edit_text('–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞ –∏–≥—Ä—ã.'
                                     ' –í—ã–±–∏—Ä–∞–π, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å:',
                                     reply_markup=kb.menu)

@router.callback_query(F.data == 'generate_game')
async def menu_generate_numder(callback: CallbackQuery, state: FSMContext):
    #await state.update_data(number_of_players=int(message.text))
    await callback.message.answer(text='–î–∞–≤–∞–π –Ω–∞—Å—Ç—Ä–æ–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–≥—Ä—ã. –í–Ω–∞—á–∞–ª–µ –≤—ã–±–µ—Ä–µ–º –∂–∞–Ω—Ä\n'
                              '–û –∂–∞–Ω—Ä–∞—Ö –º–æ–∂–µ—à—å –ø–æ—á–∏—Ç–∞—Ç—å –∑–¥–µ—Å—å /genre',
                         reply_markup=kb.menu_generate_genre)
    await state.set_state(Reg_session.genre)


@router.message(Reg_session.genre, F.text.in_(['–ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–π/–°–æ—Ü–∏–∞–ª—å–Ω—ã–π', '–≠–ø–∏—á–µ—Å–∫–æ–µ/–ì–µ—Ä–æ–∏—á–µ—Å–∫–æ–µ', '–î—Ä–∞–º–∞—Ç–∏—á–µ—Å–∫–∏–π/–ü–µ—Ä—Å–æ–Ω–∞–∂–Ω—ã–π', '–ú–∏—Å—Ç–∏—á–µ—Å–∫–∏–π/–£–∂–∞—Å', '–§—ç–Ω—Ç–µ–∑–∏', '–ü—Ä–∏–∫–ª—é—á–µ–Ω—á–µ—Å–∫–∏–π', '–ú–∏—Ä–æ—Ç–≤–æ—Ä—á–µ—Å–∫–∏–π']))
async def menu_generate_numder(message: Message, state: FSMContext, groq_client: (AsyncGroq if os.getenv('USE_OPENAI') == "False" else AsyncClient)):
    #await state.update_data(genre=str(message.text))
    await message.answer(text='–•–º, —Ö–º, —Ö–º\n'
                              '–¢–µ–ø–µ—Ä—å —Å–ª–µ–¥—É–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å—Å—è —Å —Ü–µ–ª—å—é –≤–∞—à–µ–π –∏–≥—Ä—ã\n'
                              '–í—ã–∑—ã–≤–∞—é –ø–æ–º–æ—â–Ω–∏–∫–∞...')
    data = await state.get_data()
    data['game_data'] = {'GAME_STATE': {'genre': str(message.text)}}
    chat_completion = await groq_client.with_options(max_retries=7).chat.completions.create(
        messages=[
            target_creation(data),
            {
                'role': 'user',
                'content': '–ò–≥—Ä–æ–∫–∏ —Ö–æ—Ç—è—Ç –≤—ã–±—Ä–∞—Ç—å —Ü–µ–ª—å –∏–≥—Ä—ã'
            }
        ],
        response_format={'type': 'json_object'},
        model=os.getenv("MODEL")
    )
    ans = chat_completion.choices[0].message.content
    ans = json.loads(ans)
    await state.update_data(ans)
    try:
        await message.answer(ans['message'])
    except:
        await message.answer("–£–ø—Å! –û—Ç–ø—Ä–∞–≤—å —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—â—ë —Ä–∞–∑")
    await state.set_state(Reg_session.purpose)



@router.message(Reg_session.purpose)
async def menu_generate_numder(message: Message, state: FSMContext, groq_client: (AsyncGroq if os.getenv('USE_OPENAI') == "False" else AsyncClient)):
    data = await state.get_data()
    if data['target_created'] == "False":
        chat_completion = await groq_client.with_options(max_retries=3).chat.completions.create(
            messages=[
                target_creation(data),
                {
                    'role': 'user',
                    'content': message.text
                }
            ],
            response_format={'type': 'json_object'},
            model=os.getenv("MODEL")
        )
        ans = chat_completion.choices[0].message.content
        ans = json.loads(ans)
        try:
            await message.answer(ans['message'])
            await state.update_data(ans)
            if ans['target_created'] == "True":
                await message.answer(text='–û—Ç–ª–∏—á–Ω–æ!\n'
                                          '–ß—Ç–æ –ø–æ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –≤—ã–±–µ—Ä–µ–º? –ï—Å–ª–∏ —Ç—ã –Ω–æ–≤–∏—á–æ–∫, —Ç–æ –ª—É—á—à–µ –≤—ã–±—Ä–∞—Ç—å –ø–æ–ª–µ–≥—á–µ)',
                                     reply_markup=kb.menu_generate_purpose)
                await state.set_data(ans)
                await state.set_state(Reg_session.complexity)
        except Exception as e:
            print("–û—à–∏–±–∫–∞!", type(e).__name__)
            await message.answer("–£–ø—Å! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—â—ë —Ä–∞–∑")


@router.message(F.data == 'generate_game' and Reg_session.complexity)
async def menu_generate_numder(message: Message, state: FSMContext, session: AsyncSession):
    game_data = await state.get_data()
    game_data['GAME_STATE']['complexity'] = message.text
    game_id = await create_game({"game_data": json.dumps(game_data['GAME_STATE'])}, session)
    await message.answer(text='–û—Ç–ª–∏—á–Ω–æ, –∏–≥—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞!'
                              '–î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã –≤—ã–±–µ—Ä–∏ –≥—Ä—É–ø–ø—É:'
                              f' {html.link("–¢–´–ö", "https://t.me/truedndbot?startgroup="+"enter_"+str(game_id))}', parse_mode='HTML')
    await state.clear()


@router.callback_query(F.data == 'lk')
async def menu_lk(callback: CallbackQuery):
    await callback.answer()
    await callback.message.edit_text(
        f'‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n   ‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—Å: @{callback.from_user.username}\n   üí≥ ID: {callback.from_user.id}\n\n   üïπ –°—ã–≥—Ä–∞–Ω–æ –∏–≥—Ä: {data_user.get(callback.from_user.id, '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö :/\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ')}',
        reply_markup=kb.menu_lk)


@router.callback_query(F.data == 'help')
async def menu_help(callback: CallbackQuery):
    await callback.answer()
    await callback.message.edit_text(
        '–ü–æ–º–æ—â—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–µ–±—è, –Ω–æ –æ–Ω–∞ –Ω–µ —Å–∫–æ—Ä–∞—è üò•\n–ù–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å–Ω–∏–∑—É, —Å–º–æ–∂–µ—à—å –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏–≥—Ä—ã :)',
        reply_markup=kb.menu_help)


@router.message(Command('help'))
async def cmd_help(message: Message):
    await message.answer('üëáüèª–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–æ—Ç —Ç—É—Çüëáüèª',
                         reply_markup=kb.help)


@router.message(Command('genre'))
async def cmd_help(message: Message):
    await message.answer('–í—Å—ë –æ –∂–∞–Ω—Ä–∞—Ö, –º–æ–∂–µ—à—å –ø–æ—á–∏—Ç–∞—Ç—å –∑–¥–µ—Å—å üé≠\n\n'
                         '<i>1)</i>  <b>–§—ç–Ω—Ç–µ–∑–∏:</b>  –≠—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–π –∂–∞–Ω—Ä D&D. –ò–≥—Ä–æ–∫–∏ –æ–±—ã—á–Ω–æ –∏—Å—Å–ª–µ–¥—É—é—Ç –≤–æ–ª—à–µ–±–Ω—ã–µ –º–∏—Ä—ã, —Å—Ç–∞–ª–∫–∏–≤–∞—é—Ç—Å—è —Å –¥—Ä–∞–∫–æ–Ω–∞–º–∏, –º–∞–≥–∏—á–µ—Å–∫–∏–º–∏ —Å—É—â–µ—Å—Ç–≤–∞–º–∏ –∏ –¥—Ä–µ–≤–Ω–∏–º–∏ –ø—Ä–æ–∫–ª—è—Ç–∏—è–º–∏. –û—Å–Ω–æ–≤–Ω—ã–µ —Å–µ—Ç—Ç–∏–Ω–≥–∏, —Ç–∞–∫–∏–µ –∫–∞–∫ Forgotten Realms –∏–ª–∏ Greyhawk, –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç –∫ —ç—Ç–æ–º—É –∂–∞–Ω—Ä—É.\n\n'
                         '<i>2)</i>  <b>–ü—Ä–∏–∫–ª—é—á–µ–Ω—á–µ—Å–∫–∏–π:</b>  –í —ç—Ç–æ–º –∂–∞–Ω—Ä–µ –∞–∫—Ü–µ–Ω—Ç —Å–¥–µ–ª–∞–Ω –Ω–∞ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è—Ö –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è—Ö. –ò–≥—Ä–æ–∫–∏ –º–æ–≥—É—Ç –∏—Å–∫–∞—Ç—å —Å–æ–∫—Ä–æ–≤–∏—â–∞, —Ä–∞–∑–≥–∞–¥–∞—Ç—å –¥—Ä–µ–≤–Ω–∏–µ –∑–∞–≥–∞–¥–∫–∏ –∏ –±–æ—Ä–æ—Ç—å—Å—è —Å –º–æ–Ω—Å—Ç—Ä–∞–º–∏. –ó–¥–µ—Å—å —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Å—é–∂–µ—Ç–Ω—ã–µ –ª–∏–Ω–∏–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø–æ–∏—Å–∫–æ–º –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ –∏–ª–∏ —Å–ø–∞—Å–µ–Ω–∏–µ–º –º–∏—Ä–∞.\n\n'
                         '<i>3)</i>  <b>–ú–∏—Å—Ç–∏—á–µ—Å–∫–∏–π/–£–∂–∞—Å:</b>  –í –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∫–∞–º–ø–∞–Ω–∏—è—Ö –∞–∫—Ü–µ–Ω—Ç —Å–º–µ—â–∞–µ—Ç—Å—è –≤ —Å—Ç–æ—Ä–æ–Ω—É –º–∏—Å—Ç–∏–∫–∏ –∏ —É–∂–∞—Å–∞. –≠—Ç–æ –º–æ–∂–µ—Ç –≤–∫–ª—é—á–∞—Ç—å –≤ —Å–µ–±—è —ç–ª–µ–º–µ–Ω—Ç—ã —Ö–æ—Ä—Ä–æ—Ä–∞, —Ç–∞–∫–∏–µ –∫–∞–∫ –≤–∞–º–ø–∏—Ä—ã, –ø—Ä–∏–∑—Ä–∞–∫–∏ –∏ –¥—Ä—É–≥–∏–µ —Å–≤–µ—Ä—Ö—ä–µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å—É—â–µ—Å—Ç–≤–∞. –ß–∞—Å—Ç–æ —Ç–∞–∫–∏–µ –∏–≥—Ä—ã —Å–æ–¥–µ—Ä–∂–∞—Ç –º—Ä–∞—á–Ω—ã–µ –∏ –∑–∞–≥–∞–¥–æ—á–Ω—ã–µ —Å—é–∂–µ—Ç—ã.\n\n'
                         '<i>4)</i>  <b>–ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–π/–°–æ—Ü–∏–∞–ª—å–Ω—ã–π:</b>  –≠—Ç–æ—Ç –∂–∞–Ω—Ä —Ñ–æ–∫—É—Å–∏—Ä—É–µ—Ç—Å—è –Ω–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è—Ö –º–µ–∂–¥—É –ø–µ—Ä—Å–æ–Ω–∞–∂–∞–º–∏ –∏ –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–º–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞–º–∏. –ò–≥—Ä–æ–∫–∏ –º–æ–≥—É—Ç –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –¥–∏–ø–ª–æ–º–∞—Ç–∏–µ–π, –º–∞–Ω–∏–ø—É–ª—è—Ü–∏—è–º–∏ –∏ –∏–Ω—Ç—Ä–∏–≥–∞–º–∏, –∞ —Ç–∞–∫–∂–µ —Ä–∞–∑–≥–∞–¥—ã–≤–∞—Ç—å —Å–ª–æ–∂–Ω—ã–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –∏ –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ —Å–∏—Ç—É–∞—Ü–∏–∏.\n\n', parse_mode='HTML')
    await message.answer(
        '<i>5)</i>  <b>–≠–ø–∏—á–µ—Å–∫–æ–µ/–ì–µ—Ä–æ–∏—á–µ—Å–∫–æ–µ:</b>  –ó–¥–µ—Å—å –∞–∫—Ü–µ–Ω—Ç –¥–µ–ª–∞–µ—Ç—Å—è –Ω–∞ –≤–µ–ª–∏–∫–∏—Ö –¥–µ—è–Ω–∏—è—Ö –∏ –≥–µ—Ä–æ–∏—á–µ—Å–∫–∏—Ö –ø–æ–¥–≤–∏–≥–∞—Ö. –ò–≥—Ä–æ–∫–∏ –º–æ–≥—É—Ç —Å—Ç–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –≤–µ–ª–∏–∫–∏—Ö —Å—Ä–∞–∂–µ–Ω–∏–π, –±–æ—Ä–æ—Ç—å—Å—è —Å –º–æ–≥—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –≤—Ä–∞–≥–∞–º–∏ –∏ –¥–æ—Å—Ç–∏–≥–∞—Ç—å —ç–ø–∏—á–µ—Å–∫–∏—Ö —Ü–µ–ª–µ–π.\n\n'
        '<i>6)</i>  <b>–î—Ä–∞–º–∞—Ç–∏—á–µ—Å–∫–∏–π/–ü–µ—Ä—Å–æ–Ω–∞–∂–Ω—ã–π:</b>  –í —ç—Ç–æ–º –∂–∞–Ω—Ä–µ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–æ–∫—É—Å —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–µ–Ω –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –∏ –∏—Ö –ª–∏—á–Ω—ã—Ö –∏—Å—Ç–æ—Ä–∏—è—Ö. –≠—Ç–æ –º–æ–∂–µ—Ç –≤–∫–ª—é—á–∞—Ç—å –≤ —Å–µ–±—è —Å–ª–æ–∂–Ω—ã–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã, —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –¥—Ä–∞–º—ã –∏ –ª–∏—á–Ω—ã–µ –∏—Å–ø—ã—Ç–∞–Ω–∏—è.\n\n'
        '<i>7)</i>  <b>–ú–∏—Ä–æ—Ç–≤–æ—Ä—á–µ—Å–∫–∏–π:</b>  –ò–Ω–æ–≥–¥–∞ –∏–≥—Ä–æ–∫–∏ –ø–æ–≥—Ä—É–∂–∞—é—Ç—Å—è –≤ —Å–æ–∑–¥–∞–Ω–∏–µ –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ –º–∏—Ä–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –¥–µ–π—Å—Ç–≤–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏. –≠—Ç–æ –º–æ–∂–µ—Ç –≤–∫–ª—é—á–∞—Ç—å –≤ —Å–µ–±—è –¥–µ—Ç–∞–ª—å–Ω—É—é –ø—Ä–æ—Ä–∞–±–æ—Ç–∫—É –∫—É–ª—å—Ç—É—Ä, –∏—Å—Ç–æ—Ä–∏–∏ –∏ –≥–µ–æ–≥—Ä–∞—Ñ–∏–∏.', parse_mode="HTML")
